tvec = translation_vector;   //민혁

						cv::Mat viewMatrix = cv::Mat::zeros(4, 4, CV_64F);

						for (unsigned int row = 0; row < 3; ++row)
						{
							for (unsigned int col = 0; col < 3; ++col)
							{
								viewMatrix.at<double>(row, col) = rvec.at<double>(row, col);
							}
							viewMatrix.at<double>(row, 3) = tvec.at<double>(row, 0);
						}
						viewMatrix.at<double>(3, 3) = 1.0f;


cv::Mat cvToGl = cv::Mat::zeros(4, 4, CV_64F);
						cvToGl.at<double>(0, 0) = 1.0f;
						cvToGl.at<double>(1, 1) = -1.0f; // Invert the y axis
						cvToGl.at<double>(2, 2) = -1.0f; // invert the z axis
						cvToGl.at<double>(3, 3) = 1.0f;
						viewMatrix = cvToGl * viewMatrix;

cv::Mat glViewMatrix = cv::Mat::zeros(4, 4, CV_64F);
						cv::transpose(viewMatrix, glViewMatrix);

						double cam1[4][4] = {
							viewMatrix.at<double>(0,0), viewMatrix.at<double>(0,1), viewMatrix.at<double>(0,2), viewMatrix.at<double>(0,3)*1,
							viewMatrix.at<double>(1,0), viewMatrix.at<double>(1,1), viewMatrix.at<double>(1,2), viewMatrix.at<double>(1,3) * 1,
							viewMatrix.at<double>(2,0), viewMatrix.at<double>(2,1), viewMatrix.at<double>(2,2), viewMatrix.at<double>(2,3) * 1,
							0, 0, 0, 1
						};